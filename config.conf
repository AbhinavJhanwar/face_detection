[inputs]
# type of model to use (yolov3, resnet, dlib_hog, dlib_cnn, opencv)
model = 'opencv'

# source type (image, webcam)
source_type = 'webcam'

# path of input ('for image': image_path, 'for webcam': cameraid(int), 'for video': video_path)
source_path = 0

[outputs]
# output directory where image/video with detected faces will be saved
output_dir = ''


[opencv_model_params]
# model weights file path
model_weights = "opencv/haarcascade_frontalface_default.xml"


[yolo_model_params]
# target size of images (width, height)
target_size = (416, 416)

# model weights file path
model_weights = "yolo/yolov3-wider_16000.weights"

# model configuration file path
model_config = "yolo/yolov3-face.cfg"

# set a threshold for non maximum suppression consideration
nms_threshold = 0.3

# set a threshold to consider a detected face
conf_threshold = 0.5


[resnet_model_params]
# target size of images (width, height)
target_size = (300, 300)

# model weights file path
model_weights = "resnet/res10_300x300_ssd_iter_140000.caffemodel"

# model configuration file path
model_config = "resnet/deploy.prototxt"

# set a threshold for non maximum suppression consideration
nms_threshold = 0.4

# set a threshold to consider a detected face
conf_threshold = 0.5